

----STARTUP---- (24 October 2020 15:56:13) as D:\facultad\Smalltalk\windows64\CuisUniversity-4365.image!


Object subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Rot13'!

!classDefinition: #MarsRoverTest category: #Rot13 stamp: 'Federico 10/24/2020 15:57:40'!
Object subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Rot13'!

!classRemoval: #MarsRoverTest stamp: 'Federico 10/24/2020 15:58:09'!
Object subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Rot13'!

Object subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #MarsRoverTest category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 15:58:24'!
Object subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #MarsRover category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 16:14:43'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!
!MarsRoverTest methodsFor: 'nil' stamp: 'Federico 10/24/2020 16:14:26'!
test01
	
	| aMarsRover |
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	self assert: 0@0 = aMarsRover whereAreYou.
	
	self assert: #N = aMarsRovewhereAreYouLookingAtAt.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:15:00' prior: 50912697!
test01
	
	| aMarsRover |
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	self assert: 0@0 = aMarsRover whereAreYou.
	
	self assert: #N = aMarsRover whereAreYouLookingAt.! !

TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #MarsRoverTest category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 16:15:18'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:15:22'!
ERROR!
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:16:06'!
with: aPoint lookingAt: aSymbol 
	self shouldBeImplemented.! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:17:43' prior: 50912729!
with: aPoint lookingAt: aCardinalPoint

	^self new initializeWith: aPoint lookingAt: aCardinalPoint.! !

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:18:00'!
ERROR!

!classDefinition: #MarsRover category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 16:18:21'!
Object subclass: #MarsRover
	instanceVariableNames: 'point'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #MarsRover category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 16:18:21'!
Object subclass: #MarsRover
	instanceVariableNames: 'point cardinalPoint'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!
!MarsRover methodsFor: 'initialize' stamp: 'Federico 10/24/2020 16:18:21'!
initializeWith: aPoint lookingAt: aCardinalPoint 
	self shouldBeImplemented.
	point := aPoint.
	cardinalPoint := aCardinalPoint.! !
!MarsRover methodsFor: 'initialize' stamp: 'Federico 10/24/2020 16:18:35' prior: 50912759!
initializeWith: aPoint lookingAt: aCardinalPoint 
	point := aPoint.
	cardinalPoint := aCardinalPoint.! !

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:18:52'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'Federico 10/24/2020 16:19:19'!
whereAreYou
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'accessing' stamp: 'Federico 10/24/2020 16:19:33' prior: 50912775!
whereAreYou
	^point.! !

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:19:37'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'Federico 10/24/2020 16:19:44'!
whereAreYouLookingAt
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'accessing' stamp: 'Federico 10/24/2020 16:19:51' prior: 50912786!
whereAreYouLookingAt
	^cardinalPoint ! !

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:19:56'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:19:56'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:20:12' prior: 50912706!
test01
	
	| aMarsRover |
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	self assert: 0@0 = aMarsRover whereAreYou.
	self assert: #N = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:23:35'!
test02
	
	| aMarsRover |
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover advance.
	
	self assert: 1@0 = aMarsRover whereAreYou.
	self assert: #N = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:25:20' prior: 50912810!
test02
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.
	self assert: #N = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:25:36' prior: 50912820!
test02
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.
	self assert: #N = aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:25:43'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:26:55'!
execute: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:27:56' prior: 50912846!
execute: aCommandSequence

	point + 0@1! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:28:05' prior: 50912851!
execute: aCommandSequence

	point := point + 0@1! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:28:09' prior: 50912856!
execute: aCommandSequence

	point := point + 0@1! !

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:28:13'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:28:38' prior: 50912861!
execute: aCommandSequence

	point := (point + 0@1)! !

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:28:42'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:29:00'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:29:22' prior: 50912869!
execute: aCommandSequence

	point := point + (0@1)! !

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:29:25'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:29:25'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:29:26'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:29:53' prior: 50912832!
test02
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:30:35'!
test03
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:30:35'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:31:49' prior: 50912879!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [point := point + (0@1)].
	
	aCommandSequence = 'b' ifTrue: [point := point + (0@-1)].
	! !

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:32:07'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:32:07'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:32:07'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:32:07'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:34:44'!
test04
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:34:44'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:34:45'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:34:45'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:34:45'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:34:45'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:34:51' prior: 50912933!
test04
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:34:53'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:35:31' prior: 50912915!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [point := point + (0@1)].
	
	aCommandSequence = 'b' ifTrue: [point := point + (0@-1)].
	
	aCommandSequence = 'l' ifTrue: [cardinalPoint := #W].
	! !

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:35:34'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:35:34'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:35:34'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:35:34'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:35:34'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:35:53' prior: 50912956!
test04
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #E = aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:35:53'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:36:29' prior: 50912969!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [point := point + (0@1)].
	
	aCommandSequence = 'b' ifTrue: [point := point + (0@-1)].
	
	aCommandSequence = 'l' ifTrue: [cardinalPoint := #W].
	
	aCommandSequence = 'r' ifTrue: [cardinalPoint := #E].
	! !

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:36:35'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:36:35'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:36:35'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:36:35'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:37:58'!
test05
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #E = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:38:08' prior: 50912992!
test04
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:38:10'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:38:11'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:38:11'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:38:11'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 16:38:11'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:39:39'!
test06
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 16:43:44'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:45:13' prior: 50913005!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [
		cardinalPoint := #N ifTrue: [		point := point + (0@1)].
		cardinalPoint := #E ifTrue: [		point := point + (1@0)].
		].
	
	aCommandSequence = 'b' ifTrue: [point := point + (0@-1)].
	
	aCommandSequence = 'l' ifTrue: [cardinalPoint := #W].
	
	aCommandSequence = 'r' ifTrue: [cardinalPoint := #E].
	! !

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 16:45:18'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:45:43' prior: 50913074!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [
		cardinalPoint = #N ifTrue: [		point := point + (0@1)].
		cardinalPoint = #E ifTrue: [		point := point + (1@0)].
		].
	
	aCommandSequence = 'b' ifTrue: [point := point + (0@-1)].
	
	aCommandSequence = 'l' ifTrue: [cardinalPoint := #W].
	
	aCommandSequence = 'r' ifTrue: [cardinalPoint := #E].
	! !

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 16:45:47'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:45:47'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:45:47'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:45:47'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:45:47'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 16:45:47'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 16:45:47'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:46:45'!
test07
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:47:00'!
test08
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 16:47:15'!
FAILURE!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 16:47:15'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:47:47' prior: 50913091!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [
		cardinalPoint = #N ifTrue: [		point := point + (0@1)].
		cardinalPoint = #E ifTrue: [		point := point + (1@0)].
		cardinalPoint = #W ifTrue: [		point := point + (-1@0)].
		cardinalPoint = #S ifTrue: [		point := point + (0@-1)].
		].
	
	aCommandSequence = 'b' ifTrue: [point := point + (0@-1)].
	
	aCommandSequence = 'l' ifTrue: [cardinalPoint := #W].
	
	aCommandSequence = 'r' ifTrue: [cardinalPoint := #E].
	! !

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 16:48:05'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:48:05'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:48:05'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:48:05'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:48:05'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 16:48:05'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 16:48:05'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 16:48:05'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 16:48:06'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:49:41' prior: 50913148!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [
		cardinalPoint = #N ifTrue: [		point := point + (0@1)].
		cardinalPoint = #E ifTrue: [		point := point + (1@0)].
		cardinalPoint = #W ifTrue: [		point := point + (-1@0)].
		cardinalPoint = #S ifTrue: [		point := point + (0@-1)]
		].
	
	aCommandSequence = 'b' ifTrue: [point := point + (0@-1)].
	
	aCommandSequence = 'l' ifTrue: [cardinalPoint := #W].
	
	aCommandSequence = 'r' ifTrue: [cardinalPoint := #E].
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:49:57'!
forward

	^ [
		cardinalPoint = #N ifTrue: [		point := point + (0@1)].
		cardinalPoint = #E ifTrue: [		point := point + (1@0)].
		cardinalPoint = #W ifTrue: [		point := point + (-1@0)].
		cardinalPoint = #S ifTrue: [		point := point + (0@-1)]
		]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:49:57' prior: 50913189!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: self forward.
	
	aCommandSequence = 'b' ifTrue: [point := point + (0@-1)].
	
	aCommandSequence = 'l' ifTrue: [cardinalPoint := #W].
	
	aCommandSequence = 'r' ifTrue: [cardinalPoint := #E].
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:50:38' prior: 50913207!
forward
	cardinalPoint = #N ifTrue: [		point := point + (0@1)].
	cardinalPoint = #E ifTrue: [		point := point + (1@0)].
	cardinalPoint = #W ifTrue: [		point := point + (-1@0)].
	cardinalPoint = #S ifTrue: [		point := point + (0@-1)]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:50:54' prior: 50913218!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [self forward].
	
	aCommandSequence = 'b' ifTrue: [point := point + (0@-1)].
	
	aCommandSequence = 'l' ifTrue: [cardinalPoint := #W].
	
	aCommandSequence = 'r' ifTrue: [cardinalPoint := #E].
	! !

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:50:59'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:50:59'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:50:59'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:50:59'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 16:50:59'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 16:50:59'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 16:50:59'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 16:50:59'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:53:01'!
test09
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 16:53:03'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:53:43' prior: 50913241!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [self forward].
	
	aCommandSequence = 'b' ifTrue: [point := point + (0@-1)].
	
	aCommandSequence = 'l' ifTrue: [cardinalPoint := #W].
	
	aCommandSequence = 'r' ifTrue: [cardinalPoint := #E].
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:53:48'!
backward

	^ point := point + (0@-1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:53:49' prior: 50913285!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [self forward].
	
	aCommandSequence = 'b' ifTrue: [self backward].
	
	aCommandSequence = 'l' ifTrue: [cardinalPoint := #W].
	
	aCommandSequence = 'r' ifTrue: [cardinalPoint := #E].
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:54:02' prior: 50913296!
backward

	 point := point + (0@-1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:54:39' prior: 50913312!
backward

	 cardinalPoint = #N ifTrue: [point := point + (0@-1)]
	 ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:55:07' prior: 50913317!
backward
	cardinalPoint = #N ifTrue: [point := point + (0@-1)].
	cardinalPoint = #E ifTrue: [point := point + (-1@0)].
	 ! !

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 16:55:13'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:55:14'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:55:14'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:55:14'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:55:14'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 16:55:14'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 16:55:14'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 16:55:14'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 16:55:14'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 16:55:14'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:55:26' prior: 50913272!
test09
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 16:55:28'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:55:50' prior: 50913323!
backward
	cardinalPoint = #N ifTrue: [point := point + (0@-1)].
	cardinalPoint = #E ifTrue: [point := point + (-1@0)].
	cardinalPoint = #W ifTrue: [point := point + (0@1)].
	 ! !

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 16:55:54'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:55:54'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:55:54'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:55:54'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:55:54'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 16:55:54'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 16:55:54'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 16:55:54'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 16:55:54'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 16:55:54'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:56:09'!
test10
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 16:56:11'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:56:48' prior: 50913369!
backward
	cardinalPoint = #N ifTrue: [point := point + (0@-1)].
	cardinalPoint = #E ifTrue: [point := point + (-1@0)].
	cardinalPoint = #W ifTrue: [point := point + (1@0)].
	cardinalPoint = #S ifTrue: [point := point + (0@1)].
	 ! !

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 16:56:52'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:56:52'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:56:52'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:56:52'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:56:52'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 16:56:52'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 16:56:52'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 16:56:52'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 16:56:52'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 16:56:52'!
FAILURE!

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 16:56:52'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 16:56:52'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:56:59' prior: 50913356!
test09
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 16:57:01'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 16:57:05'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 16:57:05'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 16:57:05'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 16:57:05'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 16:57:05'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 16:57:05'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 16:57:05'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 16:57:05'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 16:57:05'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 16:57:06'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 16:59:13'!
test11
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:00:05' prior: 50913457!
test09
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:00:19' prior: 50913403!
test10
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 17:00:24'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 17:00:24'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 17:00:24'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 17:00:24'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 17:00:24'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 17:00:24'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 17:00:24'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 17:00:24'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 17:00:25'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 17:00:25'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'Federico 10/24/2020 17:00:25'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:03:55'!
test12
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #S = aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test12 stamp: 'Federico 10/24/2020 17:03:57'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:04:29'!
leftRotation

	^ cardinalPoint := #W! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:04:29' prior: 50913301!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [self forward].
	
	aCommandSequence = 'b' ifTrue: [self backward].
	
	aCommandSequence = 'l' ifTrue: [self leftRotation].
	
	aCommandSequence = 'r' ifTrue: [cardinalPoint := #E].
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:05:22' prior: 50913565!
leftRotation
	cardinalPoint = #N ifTrue: [cardinalPoint := #W].
	cardinalPoint = #W ifTrue: [cardinalPoint := #S].! !

!testRun: #MarsRoverTest #test12 stamp: 'Federico 10/24/2020 17:05:27'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 17:05:27'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 17:05:27'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 17:05:27'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 17:05:27'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 17:05:27'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 17:05:27'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 17:05:27'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 17:05:27'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 17:05:27'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 17:05:27'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'Federico 10/24/2020 17:05:27'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'Federico 10/24/2020 17:05:27'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 17:05:27'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:07:10' prior: 50913581!
leftRotation
	cardinalPoint = #N ifTrue: [^cardinalPoint := #W].
	cardinalPoint = #W ifTrue: [^cardinalPoint := #S].! !

!testRun: #MarsRoverTest #test12 stamp: 'Federico 10/24/2020 17:07:15'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 17:07:15'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 17:07:15'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 17:07:15'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 17:07:15'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 17:07:15'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 17:07:15'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 17:07:15'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 17:07:15'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 17:07:15'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 17:07:15'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'Federico 10/24/2020 17:07:15'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'Federico 10/24/2020 17:07:15'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:07:26'!
test13
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #E = aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test13 stamp: 'Federico 10/24/2020 17:07:27'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:07:50' prior: 50913624!
leftRotation
	cardinalPoint = #N ifTrue: [^cardinalPoint := #W].
	cardinalPoint = #W ifTrue: [^cardinalPoint := #S].
	cardinalPoint = #S ifTrue: [^cardinalPoint := #E].
	cardinalPoint = #E ifTrue: [^cardinalPoint := #N].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:08:01'!
test14
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #N = aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'Federico 10/24/2020 17:08:04'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:09:05'!
test15
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #S = aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test15 stamp: 'Federico 10/24/2020 17:11:08'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:11:31'!
rightRotation

	^ cardinalPoint := #E! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:11:31' prior: 50913570!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [self forward].
	
	aCommandSequence = 'b' ifTrue: [self backward].
	
	aCommandSequence = 'l' ifTrue: [self leftRotation].
	
	aCommandSequence = 'r' ifTrue: [self rightRotation].
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:12:15' prior: 50913744!
rightRotation

	cardinalPoint = #N ifTrue: [ ^cardinalPoint := #E].
	cardinalPoint = #E ifTrue: [ ^cardinalPoint := #S].! !

!testRun: #MarsRoverTest #test15 stamp: 'Federico 10/24/2020 17:12:19'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 17:12:19'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 17:12:19'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 17:12:19'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 17:12:20'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 17:12:20'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 17:12:20'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 17:12:20'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 17:12:20'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 17:12:20'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 17:12:20'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'Federico 10/24/2020 17:12:20'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'Federico 10/24/2020 17:12:20'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'Federico 10/24/2020 17:12:20'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'Federico 10/24/2020 17:12:20'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'Federico 10/24/2020 17:12:20'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:12:31'!
test16
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test16 stamp: 'Federico 10/24/2020 17:12:32'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:12:53' prior: 50913760!
rightRotation

	cardinalPoint = #N ifTrue: [ ^cardinalPoint := #E].
	cardinalPoint = #E ifTrue: [ ^cardinalPoint := #S].
	cardinalPoint = #S ifTrue: [ ^cardinalPoint := #W].! !

!testRun: #MarsRoverTest #test16 stamp: 'Federico 10/24/2020 17:13:00'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 17:13:00'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 17:13:00'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 17:13:00'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 17:13:01'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 17:13:01'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 17:13:01'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 17:13:01'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 17:13:01'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 17:13:01'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 17:13:01'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'Federico 10/24/2020 17:13:01'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'Federico 10/24/2020 17:13:01'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'Federico 10/24/2020 17:13:01'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'Federico 10/24/2020 17:13:01'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'Federico 10/24/2020 17:13:01'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'Federico 10/24/2020 17:13:01'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:13:10'!
test17
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #N = aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test17 stamp: 'Federico 10/24/2020 17:13:12'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 17:13:29' prior: 50913821!
rightRotation

	cardinalPoint = #N ifTrue: [ ^cardinalPoint := #E].
	cardinalPoint = #E ifTrue: [ ^cardinalPoint := #S].
	cardinalPoint = #S ifTrue: [ ^cardinalPoint := #W].
	cardinalPoint = #W ifTrue: [ ^cardinalPoint := #N].! !

!testRun: #MarsRoverTest #test17 stamp: 'Federico 10/24/2020 17:13:32'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 17:13:32'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 17:13:32'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 17:13:32'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 17:13:32'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 17:13:32'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 17:13:32'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 17:13:32'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 17:13:32'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 17:13:32'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 17:13:32'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'Federico 10/24/2020 17:13:32'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'Federico 10/24/2020 17:13:33'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'Federico 10/24/2020 17:13:33'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'Federico 10/24/2020 17:13:33'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'Federico 10/24/2020 17:13:33'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'Federico 10/24/2020 17:13:33'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'Federico 10/24/2020 17:13:33'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'Federico 10/24/2020 17:13:52'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'Federico 10/24/2020 17:13:52'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 17:13:52'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'Federico 10/24/2020 17:13:53'!
PASSED!
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 17:15:31' prior: 50913749!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [self forward].
	aCommandSequence = 'b' ifTrue: [self backward].
	aCommandSequence = 'l' ifTrue: [self leftRotation].
	aCommandSequence = 'r' ifTrue: [self rightRotation].
	! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 17:18:20' prior: 50913988!
execute: aCommandSequence

	aCommandSequence = 'f' ifTrue: [self forward].
	aCommandSequence = 'b' ifTrue: [self backward].
	aCommandSequence = 'l' ifTrue: [self leftRotation].
	aCommandSequence = 'r' ifTrue: [self rightRotation].
	
	! !

!methodRemoval: MarsRoverTest #test01 stamp: 'Federico 10/24/2020 17:19:33'!
test01
	
	| aMarsRover |
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	self assert: 0@0 = aMarsRover whereAreYou.
	self assert: #N = aMarsRover whereAreYouLookingAt.!

----QUIT----(24 October 2020 18:47:51) CuisUniversity-4365.image priorSource: 18592122!

----STARTUP---- (24 October 2020 19:21:36) as D:\facultad\Smalltalk\windows64\CuisUniversity-4365.image!

!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:28:04'!
test18
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'fb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@0 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test18 stamp: 'Federico 10/24/2020 19:28:15'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 19:28:15'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 19:28:15'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 19:28:15'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 19:28:15'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 19:28:15'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 19:28:15'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 19:28:15'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 19:28:15'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 19:28:15'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'Federico 10/24/2020 19:28:15'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'Federico 10/24/2020 19:28:16'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'Federico 10/24/2020 19:28:16'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'Federico 10/24/2020 19:28:16'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'Federico 10/24/2020 19:28:16'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'Federico 10/24/2020 19:28:16'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'Federico 10/24/2020 19:28:16'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'Federico 10/24/2020 19:28:16'!
PASSED!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:28:37' prior: 50914023!
test18
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test18 stamp: 'Federico 10/24/2020 19:29:05'!
FAILURE!
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 19:34:22' prior: 50913999!
execute: aCommandSequence

	aCommandSequence do: [ :aCommand | 
		aCommand = $f ifTrue: [self forward].
		aCommand = $b ifTrue: [self backward].
		aCommand = $l ifTrue: [self leftRotation].
		aCommand = $r ifTrue: [self rightRotation].
	].
	
	! !

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 19:34:29'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 19:34:29'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 19:34:29'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 19:34:29'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 19:34:29'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 19:34:30'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 19:34:30'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 19:34:30'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 19:34:30'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'Federico 10/24/2020 19:34:30'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'Federico 10/24/2020 19:34:30'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'Federico 10/24/2020 19:34:30'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'Federico 10/24/2020 19:34:30'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'Federico 10/24/2020 19:34:30'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'Federico 10/24/2020 19:34:30'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'Federico 10/24/2020 19:34:30'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'Federico 10/24/2020 19:34:30'!
PASSED!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:36:05'!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test19 stamp: 'Federico 10/24/2020 19:36:09'!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:39:55'!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffbaffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test19 stamp: 'Federico 10/24/2020 19:39:57'!
FAILURE!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:40:20' prior: 50914163!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffbaf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test19 stamp: 'Federico 10/24/2020 19:40:36'!
FAILURE!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:40:58' prior: 50914176!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test19 stamp: 'Federico 10/24/2020 19:41:18'!
FAILURE!
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 19:44:27' prior: 50914091!
execute: aCommandSequence

	aCommandSequence do: [ :aCommand | 
		self validCommand ifTrue: [
		aCommand = $f ifTrue: [self forward].
		aCommand = $b ifTrue: [self backward].
		aCommand = $l ifTrue: [self leftRotation].
		aCommand = $r ifTrue: [self rightRotation].
		] ifFalse: [^nil]
		
	].
	
	! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 19:45:40' prior: 50914201!
execute: aCommandSequence

	aCommandSequence do: [ :aCommand | 
		({'f','b','l','r'} includes: aCommand)  ifTrue: [
		aCommand = $f ifTrue: [self forward].
		aCommand = $b ifTrue: [self backward].
		aCommand = $l ifTrue: [self leftRotation].
		aCommand = $r ifTrue: [self rightRotation].
		] ifFalse: [^nil]
		
	].
	
	! !

!testRun: #MarsRoverTest #test19 stamp: 'Federico 10/24/2020 19:45:50'!
FAILURE!

!testRun: #MarsRoverTest #test19 stamp: 'Federico 10/24/2020 19:46:30'!
FAILURE!

!testRun: #MarsRoverTest #test19 stamp: 'Federico 10/24/2020 19:46:35'!
FAILURE!
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 19:47:37' prior: 50914214!
execute: aCommandSequence

	aCommandSequence do: [ :aCommand | 
		({$f. $b. $l. $r} includes: aCommand)  ifTrue: [
		aCommand = $f ifTrue: [self forward].
		aCommand = $b ifTrue: [self backward].
		aCommand = $l ifTrue: [self leftRotation].
		aCommand = $r ifTrue: [self rightRotation].
		] ifFalse: [^nil]
		
	].
	
	! !

!testRun: #MarsRoverTest #test02 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'Federico 10/24/2020 19:47:40'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'Federico 10/24/2020 19:47:41'!
PASSED!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:59:39'!
test01ForwardLookingAtNorthAdvanceOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test02 stamp: 'Federico 10/24/2020 19:59:40'!
test02
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:01:18'!
test02ForwardLookingAtEastAdvanceOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test06 stamp: 'Federico 10/24/2020 20:01:23'!
test06
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:01:58'!
test07ForwardLookingAtWestBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test07 stamp: 'Federico 10/24/2020 20:01:58'!
test07
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:02:28'!
test04ForwardLookingAtSouthBackOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test08 stamp: 'Federico 10/24/2020 20:02:28'!
test08
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:02:35'!
test03ForwardLookingAtWestBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test07ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 20:02:35'!
test07ForwardLookingAtWestBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:04:49'!
test05BackwardLookingAtNorthBackOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test03 stamp: 'Federico 10/24/2020 20:04:50'!
test03
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:05:14'!
test06BackwardLookingAtEastBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test09 stamp: 'Federico 10/24/2020 20:05:14'!
test09
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:05:34'!
test07BackwardLookingAtWestAdvanceOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test10 stamp: 'Federico 10/24/2020 20:05:34'!
test10
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:05:53'!
test08BackwardLookingAtSouthAdvanceOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test11 stamp: 'Federico 10/24/2020 20:05:53'!
test11
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:07:12'!
test09LeftRotationLookingAtNorthRotateToWest
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test04 stamp: 'Federico 10/24/2020 20:07:13'!
test04
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:07:42'!
test10LeftRotationLookingAtWestRotateToSouth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #S = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test12 stamp: 'Federico 10/24/2020 20:07:42'!
test12
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #S = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:08:00'!
test11LeftRotationLookingAtSouthRotateToEast
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #E = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test13 stamp: 'Federico 10/24/2020 20:08:01'!
test13
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #E = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:08:17'!
test12LeftRotationLookingAtEastRotateToNorth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #N = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test14 stamp: 'Federico 10/24/2020 20:08:17'!
test14
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #N = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:09:16'!
test13RightRotationLookingAtNorthRotateToEast
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #E = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test05 stamp: 'Federico 10/24/2020 20:09:16'!
test05
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #E = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:09:30'!
test14RightRotationLookingAtEastRotateToSouth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #S = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test15 stamp: 'Federico 10/24/2020 20:09:30'!
test15
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #S = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:09:47'!
test15RightRotationLookingAtSouthRotateToWest
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test16 stamp: 'Federico 10/24/2020 20:09:47'!
test16
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:10:04'!
test16RightRotationLookingAtWestRotateToNorth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #N = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test17 stamp: 'Federico 10/24/2020 20:10:04'!
test17
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #N = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:10:37' prior: 50914189!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:15:32'!
test17TwoForwardAndOneBackwardWorkAsOneForward
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test18 stamp: 'Federico 10/24/2020 20:15:37'!
test18
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:16:40'!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test19 stamp: 'Federico 10/24/2020 20:16:44'!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:16:59' prior: 50914658!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.
	self assert: #N = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:18:38' overrides: 16927572!
setUp! !

TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'north, east, west, south'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #MarsRoverTest category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 20:19:17'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'north east west south'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!
!MarsRoverTest methodsFor: 'setup' stamp: 'Federico 10/24/2020 20:19:49' prior: 50914691 overrides: 16927572!
setUp
	north := #N.
	south := #S.
	east := #E.
	west := #W.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:19:59' prior: 50914293!
test01ForwardLookingAtNorthAdvanceOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:20:04' prior: 50914312!
test02ForwardLookingAtEastAdvanceOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: east.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:20:10' prior: 50914369!
test03ForwardLookingAtWestBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:20:14' prior: 50914350!
test04ForwardLookingAtSouthBackOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: south.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:20:20' prior: 50914390!
test05BackwardLookingAtNorthBackOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:20:25' prior: 50914409!
test06BackwardLookingAtEastBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: east.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:20:29' prior: 50914428!
test07BackwardLookingAtWestAdvanceOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:20:33' prior: 50914447!
test08BackwardLookingAtSouthAdvanceOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: south.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:20:39' prior: 50914467!
test09LeftRotationLookingAtNorthRotateToWest
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:20:43' prior: 50914802!
test09LeftRotationLookingAtNorthRotateToWest
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: west = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:20:48' prior: 50914487!
test10LeftRotationLookingAtWestRotateToSouth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #S = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:20:51' prior: 50914826!
test10LeftRotationLookingAtWestRotateToSouth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: south = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:20:59' prior: 50914507!
test11LeftRotationLookingAtSouthRotateToEast
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: south.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: east = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:21:06' prior: 50914527!
test12LeftRotationLookingAtEastRotateToNorth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: east.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: north = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:21:13' prior: 50914547!
test13RightRotationLookingAtNorthRotateToEast
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: east = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:21:20' prior: 50914567!
test14RightRotationLookingAtEastRotateToSouth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: east.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: south = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:21:26' prior: 50914587!
test15RightRotationLookingAtSouthRotateToWest
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: south.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: west = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:21:33' prior: 50914607!
test16RightRotationLookingAtWestRotateToNorth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: north = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:21:39' prior: 50914638!
test17TwoForwardAndOneBackwardWorkAsOneForward
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:21:43' prior: 50914678!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.
	self assert: #N = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:21:46' prior: 50914934!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.
	self assert: north = aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 20:21:50'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 20:21:51'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 20:21:51'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 20:21:51'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 20:21:51'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 20:21:52'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:21:52'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 20:21:53'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 20:21:56'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:21:56'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:21:56'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 20:21:56'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 20:21:56'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 20:21:56'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 20:21:56'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:21:56'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:21:56'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 20:21:56'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 20:21:56'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 20:21:56'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 20:21:56'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 20:21:57'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 20:21:57'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 20:21:57'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 20:21:57'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 20:21:57'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 20:21:57'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:21:58'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:21:58'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 20:21:58'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 20:21:58'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 20:21:58'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 20:21:58'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:21:58'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:21:59'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 20:21:59'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 20:21:59'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 20:21:59'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 20:21:59'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 20:21:59'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 20:21:59'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 20:21:59'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 20:21:59'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 20:21:59'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 20:21:59'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:22:03'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:22:03'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 20:22:03'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 20:22:03'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 20:22:03'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 20:22:03'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:22:03'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:22:03'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 20:22:03'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 20:22:03'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 20:22:03'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 20:22:03'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 20:22:03'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 20:22:04'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 20:22:04'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 20:22:04'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 20:22:04'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 20:22:04'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:22:11'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:22:11'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 20:22:11'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 20:22:11'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 20:22:11'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 20:22:11'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:22:12'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:22:12'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 20:22:12'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 20:22:12'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 20:22:12'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 20:22:12'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 20:22:12'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 20:22:12'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 20:22:12'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 20:22:12'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 20:22:12'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 20:22:12'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:22:42'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:22:42'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 20:22:42'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 20:22:42'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 20:22:42'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 20:22:42'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:22:42'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:22:42'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 20:22:43'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 20:22:43'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 20:22:43'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 20:22:43'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 20:22:43'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 20:22:43'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 20:22:43'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 20:22:43'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 20:22:43'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 20:22:43'!
PASSED!
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:23:28' prior: 50914947!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'far'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.
	self assert: north = aMarsRover whereAreYouLookingAt.! !

!classDefinition: #MarsRover category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 20:33:38'!
Object subclass: #MarsRover
	instanceVariableNames: 'point direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:33:39' prior: 50913677!
leftRotation
	direction = #N ifTrue: [^direction := #W].
	direction = #W ifTrue: [^direction := #S].
	direction = #S ifTrue: [^direction := #E].
	direction = #E ifTrue: [^direction := #N].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:33:39' prior: 50913886!
rightRotation

	direction = #N ifTrue: [ ^direction := #E].
	direction = #E ifTrue: [ ^direction := #S].
	direction = #S ifTrue: [ ^direction := #W].
	direction = #W ifTrue: [ ^direction := #N].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:33:39' prior: 50913416!
backward
	direction = #N ifTrue: [point := point + (0@-1)].
	direction = #E ifTrue: [point := point + (-1@0)].
	direction = #W ifTrue: [point := point + (1@0)].
	direction = #S ifTrue: [point := point + (0@1)].
	 ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:33:39' prior: 50913230!
forward
	direction = #N ifTrue: [		point := point + (0@1)].
	direction = #E ifTrue: [		point := point + (1@0)].
	direction = #W ifTrue: [		point := point + (-1@0)].
	direction = #S ifTrue: [		point := point + (0@-1)]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:33:39' prior: 50912791!
whereAreYouLookingAt
	^direction ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:33:39' prior: 50912766!
initializeWith: aPoint lookingAt: aCardinalPoint 
	point := aPoint.
	direction := aCardinalPoint.! !

Object subclass: #MarsRoverDirection
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #MarsRoverDirection category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 20:35:10'!
Object subclass: #MarsRoverDirection
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

MarsRoverDirection subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #North category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 20:35:38'!
MarsRoverDirection subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

MarsRoverDirection subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #South category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 20:35:43'!
MarsRoverDirection subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

MarsRoverDirection subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #East category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 20:35:46'!
MarsRoverDirection subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

MarsRoverDirection subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #West category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 20:35:48'!
MarsRoverDirection subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 20:44:48' prior: 50915481!
forward
	point := point + direction xxxforward.
	"
	direction = #N ifTrue: [		point := point + (0@1)].
	direction = #E ifTrue: [		point := point + (1@0)].
	direction = #W ifTrue: [		point := point + (-1@0)].
	direction = #S ifTrue: [		point := point + (0@-1)]
	"! !
!MarsRoverDirection methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:46:48'!
xxxforward! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:46:58' prior: 50915573!
xxxforward
	self subclassResponsibility.! !
!East methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:47:14' overrides: 50915577!
xxxforward
	self subclassResponsibility.! !
!North methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:47:18' overrides: 50915577!
xxxforward
	self subclassResponsibility.! !
!South methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:47:21' overrides: 50915577!
xxxforward
	self subclassResponsibility.! !
!West methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:47:24' overrides: 50915577!
xxxforward
	self subclassResponsibility.! !
!North methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:47:56' prior: 50915585 overrides: 50915577!
xxxforward
	^0@1! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:48:08' prior: 50915581 overrides: 50915577!
xxxforward
	^1@0! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:48:22' prior: 50915589 overrides: 50915577!
xxxforward
	^0@-1! !
!West methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:48:33' prior: 50915593 overrides: 50915577!
xxxforward
	^-1@0! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:49:39'!
xxxbackward
	self subclassResponsibility.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:49:50' overrides: 50915617!
xxxbackward
	^-1@0! !
!North methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:49:59' overrides: 50915617!
xxxbackward
	^0@-1! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:50:07' overrides: 50915617!
xxxbackward
	^0@1! !
!West methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:50:13' overrides: 50915617!
xxxbackward
	^1@0! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:52:03'!
rotateLeft
	self subclassResponsibility.! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:52:07'!
rotateRight
	self subclassResponsibility.! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 20:52:32' prior: 50915471!
backward

	"
	direction = #N ifTrue: [point := point + (0@-1)].
	direction = #E ifTrue: [point := point + (-1@0)].
	direction = #W ifTrue: [point := point + (1@0)].
	direction = #S ifTrue: [point := point + (0@1)].
	"
	 ! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 20:52:44' prior: 50915648!
backward
	point := point + direction xxxbackward.
	"
	direction = #N ifTrue: [point := point + (0@-1)].
	direction = #E ifTrue: [point := point + (-1@0)].
	direction = #W ifTrue: [point := point + (1@0)].
	direction = #S ifTrue: [point := point + (0@1)].
	"
	 ! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 20:53:26' prior: 50915451!
leftRotation
	direction := direction rotateLeft
	"
	direction = #N ifTrue: [^direction := #W].
	direction = #W ifTrue: [^direction := #S].
	direction = #S ifTrue: [^direction := #E].
	direction = #E ifTrue: [^direction := #N].
	"! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 20:53:37' prior: 50915461!
rightRotation
	direction := direction rotateRight.
	"
	direction = #N ifTrue: [ ^direction := #E].
	direction = #E ifTrue: [ ^direction := #S].
	direction = #S ifTrue: [ ^direction := #W].
	direction = #W ifTrue: [ ^direction := #N].
	"! !
!East methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:55:06' overrides: 50915638!
rotateLeft
	^North new.! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 20:55:16' prior: 50915670!
leftRotation
	direction := direction rotateLeft.
	"
	direction = #N ifTrue: [^direction := #W].
	direction = #W ifTrue: [^direction := #S].
	direction = #S ifTrue: [^direction := #E].
	direction = #E ifTrue: [^direction := #N].
	"! !
!North methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:55:32' overrides: 50915638!
rotateLeft
	^West new.! !
!West methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:55:44' overrides: 50915638!
rotateLeft
	^South new.! !
!South methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:55:52' overrides: 50915638!
rotateLeft
	^East new.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:56:25' overrides: 50915643!
rotateRight
	^South new.! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:56:42' overrides: 50915643!
rotateRight
	^West new.! !
!West methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:56:53' overrides: 50915643!
rotateRight
	^North new.! !
!North methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:57:01' overrides: 50915643!
rotateRight
	^East new.! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:58:40' prior: 50912735!
with: aPoint lookingAt: aMarsRoverDirection

	^self new initializeWith: aPoint lookingAt: aMarsRoverDirection.! !
!MarsRover methodsFor: 'initialize' stamp: 'Federico 10/24/2020 20:58:57' prior: 50915496!
initializeWith: aPoint lookingAt: aMarsRoverDirection
	point := aPoint.
	direction := aMarsRoverDirection.! !
!MarsRoverTest methodsFor: 'setup' stamp: 'Federico 10/24/2020 20:59:24' prior: 50914709 overrides: 16927572!
setUp
	north := North.
	south := South.
	east := East.
	west := West.! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:59:33'!
ERROR!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:59:33'!
ERROR!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 20:59:33'!
ERROR!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 20:59:33'!
ERROR!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 20:59:33'!
ERROR!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 20:59:33'!
ERROR!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:59:33'!
ERROR!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:59:34'!
ERROR!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 20:59:34'!
ERROR!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 20:59:34'!
ERROR!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 20:59:34'!
ERROR!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 20:59:34'!
ERROR!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 20:59:34'!
ERROR!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 20:59:34'!
ERROR!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 20:59:34'!
ERROR!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 20:59:34'!
ERROR!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 20:59:34'!
ERROR!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 20:59:34'!
ERROR!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 20:59:47'!
ERROR!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 20:59:48'!
ERROR!
!MarsRoverTest methodsFor: 'setup' stamp: 'Federico 10/24/2020 21:00:14' prior: 50915749 overrides: 16927572!
setUp
	north := North.
	south := South.
	east := East.
	west := West.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:01:55' prior: 50915718 overrides: 50915643!
rotateRight
	^South.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:01:58' prior: 50915692 overrides: 50915638!
rotateLeft
	^North.! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:02:03' prior: 50915714 overrides: 50915638!
rotateLeft
	^East.! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:02:10' prior: 50915901 overrides: 50915638!
rotateLeft
	^East new.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:02:20' prior: 50915896 overrides: 50915638!
rotateLeft
	^North new.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:02:23' prior: 50915891 overrides: 50915643!
rotateRight
	^South new.! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 21:02:34'!
ERROR!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 21:02:34'!
ERROR!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 21:02:42'!
ERROR!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 21:02:51'!
ERROR!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 21:02:51'!
ERROR!

----STARTUP---- (24 October 2020 21:04:12) as D:\facultad\Smalltalk\windows64\CuisUniversity-4365.image!

!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:28:04'!
test18
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'fb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@0 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:28:37' prior: 50915941!
test18
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 19:34:22' prior: 50913999!
execute: aCommandSequence

	aCommandSequence do: [ :aCommand | 
		aCommand = $f ifTrue: [self forward].
		aCommand = $b ifTrue: [self backward].
		aCommand = $l ifTrue: [self leftRotation].
		aCommand = $r ifTrue: [self rightRotation].
	].
	
	! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:36:05'!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test19 stamp: 'Federico 10/24/2020 21:04:19'!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:39:55'!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffbaffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:40:20' prior: 50915990!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffbaf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:40:58' prior: 50916000!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 19:44:27' prior: 50915961!
execute: aCommandSequence

	aCommandSequence do: [ :aCommand | 
		self validCommand ifTrue: [
		aCommand = $f ifTrue: [self forward].
		aCommand = $b ifTrue: [self backward].
		aCommand = $l ifTrue: [self leftRotation].
		aCommand = $r ifTrue: [self rightRotation].
		] ifFalse: [^nil]
		
	].
	
	! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 19:45:40' prior: 50916020!
execute: aCommandSequence

	aCommandSequence do: [ :aCommand | 
		({'f','b','l','r'} includes: aCommand)  ifTrue: [
		aCommand = $f ifTrue: [self forward].
		aCommand = $b ifTrue: [self backward].
		aCommand = $l ifTrue: [self leftRotation].
		aCommand = $r ifTrue: [self rightRotation].
		] ifFalse: [^nil]
		
	].
	
	! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 19:47:37' prior: 50916033!
execute: aCommandSequence

	aCommandSequence do: [ :aCommand | 
		({$f. $b. $l. $r} includes: aCommand)  ifTrue: [
		aCommand = $f ifTrue: [self forward].
		aCommand = $b ifTrue: [self backward].
		aCommand = $l ifTrue: [self leftRotation].
		aCommand = $r ifTrue: [self rightRotation].
		] ifFalse: [^nil]
		
	].
	
	! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 19:59:39'!
test01ForwardLookingAtNorthAdvanceOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test02 stamp: 'Federico 10/24/2020 21:04:19'!
test02
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:01:18'!
test02ForwardLookingAtEastAdvanceOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test06 stamp: 'Federico 10/24/2020 21:04:19'!
test06
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:01:58'!
test07ForwardLookingAtWestBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test07 stamp: 'Federico 10/24/2020 21:04:19'!
test07
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:02:28'!
test04ForwardLookingAtSouthBackOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test08 stamp: 'Federico 10/24/2020 21:04:19'!
test08
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:02:35'!
test03ForwardLookingAtWestBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test07ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 21:04:19'!
test07ForwardLookingAtWestBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:04:49'!
test05BackwardLookingAtNorthBackOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test03 stamp: 'Federico 10/24/2020 21:04:20'!
test03
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:05:14'!
test06BackwardLookingAtEastBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test09 stamp: 'Federico 10/24/2020 21:04:20'!
test09
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:05:34'!
test07BackwardLookingAtWestAdvanceOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test10 stamp: 'Federico 10/24/2020 21:04:20'!
test10
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:05:53'!
test08BackwardLookingAtSouthAdvanceOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test11 stamp: 'Federico 10/24/2020 21:04:20'!
test11
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:07:12'!
test09LeftRotationLookingAtNorthRotateToWest
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test04 stamp: 'Federico 10/24/2020 21:04:20'!
test04
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:07:42'!
test10LeftRotationLookingAtWestRotateToSouth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #S = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test12 stamp: 'Federico 10/24/2020 21:04:20'!
test12
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #S = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:08:00'!
test11LeftRotationLookingAtSouthRotateToEast
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #E = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test13 stamp: 'Federico 10/24/2020 21:04:20'!
test13
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #E = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:08:17'!
test12LeftRotationLookingAtEastRotateToNorth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #N = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test14 stamp: 'Federico 10/24/2020 21:04:20'!
test14
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #N = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:09:16'!
test13RightRotationLookingAtNorthRotateToEast
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #E = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test05 stamp: 'Federico 10/24/2020 21:04:20'!
test05
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #E = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:09:30'!
test14RightRotationLookingAtEastRotateToSouth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #S = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test15 stamp: 'Federico 10/24/2020 21:04:21'!
test15
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #E.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #S = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:09:47'!
test15RightRotationLookingAtSouthRotateToWest
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test16 stamp: 'Federico 10/24/2020 21:04:21'!
test16
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #S.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:10:04'!
test16RightRotationLookingAtWestRotateToNorth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #N = aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test17 stamp: 'Federico 10/24/2020 21:04:21'!
test17
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #W.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #N = aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:10:37' prior: 50916010!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:15:32'!
test17TwoForwardAndOneBackwardWorkAsOneForward
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test18 stamp: 'Federico 10/24/2020 21:04:21'!
test18
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:16:40'!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !

!methodRemoval: MarsRoverTest #test19 stamp: 'Federico 10/24/2020 21:04:21'!
test19
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.!
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:16:59' prior: 50916424!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: #N.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.
	self assert: #N = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:18:38' overrides: 16927572!
setUp! !

!classDefinition: #MarsRoverTest category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 21:04:21'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'north east west south'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #MarsRoverTest category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 21:04:21'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'north east west south'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!
!MarsRoverTest methodsFor: 'setup' stamp: 'Federico 10/24/2020 20:19:49' prior: 50916457 overrides: 16927572!
setUp
	north := #N.
	south := #S.
	east := #E.
	west := #W.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:19:59' prior: 50916059!
test01ForwardLookingAtNorthAdvanceOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:20:04' prior: 50916078!
test02ForwardLookingAtEastAdvanceOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: east.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:20:10' prior: 50916135!
test03ForwardLookingAtWestBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 20:20:14' prior: 50916116!
test04ForwardLookingAtSouthBackOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: south.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:20:20' prior: 50916156!
test05BackwardLookingAtNorthBackOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:20:25' prior: 50916175!
test06BackwardLookingAtEastBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: east.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:20:29' prior: 50916194!
test07BackwardLookingAtWestAdvanceOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 20:20:33' prior: 50916213!
test08BackwardLookingAtSouthAdvanceOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: south.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:20:39' prior: 50916233!
test09LeftRotationLookingAtNorthRotateToWest
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #W = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:20:43' prior: 50916571!
test09LeftRotationLookingAtNorthRotateToWest
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: west = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:20:48' prior: 50916253!
test10LeftRotationLookingAtWestRotateToSouth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: #S = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:20:51' prior: 50916595!
test10LeftRotationLookingAtWestRotateToSouth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: south = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:20:59' prior: 50916273!
test11LeftRotationLookingAtSouthRotateToEast
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: south.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: east = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 20:21:06' prior: 50916293!
test12LeftRotationLookingAtEastRotateToNorth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: east.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: north = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:21:13' prior: 50916313!
test13RightRotationLookingAtNorthRotateToEast
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: east = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:21:20' prior: 50916333!
test14RightRotationLookingAtEastRotateToSouth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: east.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: south = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:21:26' prior: 50916353!
test15RightRotationLookingAtSouthRotateToWest
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: south.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: west = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 20:21:33' prior: 50916373!
test16RightRotationLookingAtWestRotateToNorth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: north = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:21:39' prior: 50916404!
test17TwoForwardAndOneBackwardWorkAsOneForward
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:21:43' prior: 50916444!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.
	self assert: #N = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:21:46' prior: 50916703!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'faf'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.
	self assert: north = aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 20:23:28' prior: 50916716!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'far'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.
	self assert: north = aMarsRover whereAreYouLookingAt.! !

!classDefinition: #MarsRover category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 21:04:23'!
Object subclass: #MarsRover
	instanceVariableNames: 'point direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:33:39' prior: 50913677!
leftRotation
	direction = #N ifTrue: [^direction := #W].
	direction = #W ifTrue: [^direction := #S].
	direction = #S ifTrue: [^direction := #E].
	direction = #E ifTrue: [^direction := #N].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:33:39' prior: 50913886!
rightRotation

	direction = #N ifTrue: [ ^direction := #E].
	direction = #E ifTrue: [ ^direction := #S].
	direction = #S ifTrue: [ ^direction := #W].
	direction = #W ifTrue: [ ^direction := #N].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:33:39' prior: 50913416!
backward
	direction = #N ifTrue: [point := point + (0@-1)].
	direction = #E ifTrue: [point := point + (-1@0)].
	direction = #W ifTrue: [point := point + (1@0)].
	direction = #S ifTrue: [point := point + (0@1)].
	 ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:33:39' prior: 50913230!
forward
	direction = #N ifTrue: [		point := point + (0@1)].
	direction = #E ifTrue: [		point := point + (1@0)].
	direction = #W ifTrue: [		point := point + (-1@0)].
	direction = #S ifTrue: [		point := point + (0@-1)]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:33:39' prior: 50912791!
whereAreYouLookingAt
	^direction ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:33:39' prior: 50912766!
initializeWith: aPoint lookingAt: aCardinalPoint 
	point := aPoint.
	direction := aCardinalPoint.! !

!classDefinition: #MarsRoverDirection category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 21:04:23'!
Object subclass: #MarsRoverDirection
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #MarsRoverDirection category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 21:04:23'!
Object subclass: #MarsRoverDirection
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #North category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 21:04:23'!
MarsRoverDirection subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #North category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 21:04:23'!
MarsRoverDirection subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #South category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 21:04:23'!
MarsRoverDirection subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #South category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 21:04:23'!
MarsRoverDirection subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #East category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 21:04:23'!
MarsRoverDirection subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #East category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 21:04:23'!
MarsRoverDirection subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #West category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 21:04:23'!
MarsRoverDirection subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!

!classDefinition: #West category: #'MarsRover-Solution' stamp: 'Federico 10/24/2020 21:04:23'!
MarsRoverDirection subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Solution'!
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 20:44:48' prior: 50916780!
forward
	point := point + direction xxxforward.
	"
	direction = #N ifTrue: [		point := point + (0@1)].
	direction = #E ifTrue: [		point := point + (1@0)].
	direction = #W ifTrue: [		point := point + (-1@0)].
	direction = #S ifTrue: [		point := point + (0@-1)]
	"! !
!MarsRoverDirection methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:46:48'!
xxxforward! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:46:58' prior: 50916888!
xxxforward
	self subclassResponsibility.! !
!East methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:47:14' overrides: 50916892!
xxxforward
	self subclassResponsibility.! !
!North methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:47:18' overrides: 50916892!
xxxforward
	self subclassResponsibility.! !
!South methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:47:21' overrides: 50916892!
xxxforward
	self subclassResponsibility.! !
!West methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:47:24' overrides: 50916892!
xxxforward
	self subclassResponsibility.! !
!North methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:47:56' prior: 50916900 overrides: 50916892!
xxxforward
	^0@1! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:48:08' prior: 50916896 overrides: 50916892!
xxxforward
	^1@0! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:48:22' prior: 50916904 overrides: 50916892!
xxxforward
	^0@-1! !
!West methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:48:33' prior: 50916908 overrides: 50916892!
xxxforward
	^-1@0! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:49:39'!
xxxbackward
	self subclassResponsibility.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:49:50' overrides: 50916932!
xxxbackward
	^-1@0! !
!North methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:49:59' overrides: 50916932!
xxxbackward
	^0@-1! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:50:07' overrides: 50916932!
xxxbackward
	^0@1! !
!West methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:50:13' overrides: 50916932!
xxxbackward
	^1@0! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:52:03'!
rotateLeft
	self subclassResponsibility.! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:52:07'!
rotateRight
	self subclassResponsibility.! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 20:52:32' prior: 50916770!
backward

	"
	direction = #N ifTrue: [point := point + (0@-1)].
	direction = #E ifTrue: [point := point + (-1@0)].
	direction = #W ifTrue: [point := point + (1@0)].
	direction = #S ifTrue: [point := point + (0@1)].
	"
	 ! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 20:52:44' prior: 50916963!
backward
	point := point + direction xxxbackward.
	"
	direction = #N ifTrue: [point := point + (0@-1)].
	direction = #E ifTrue: [point := point + (-1@0)].
	direction = #W ifTrue: [point := point + (1@0)].
	direction = #S ifTrue: [point := point + (0@1)].
	"
	 ! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 20:53:26' prior: 50916750!
leftRotation
	direction := direction rotateLeft
	"
	direction = #N ifTrue: [^direction := #W].
	direction = #W ifTrue: [^direction := #S].
	direction = #S ifTrue: [^direction := #E].
	direction = #E ifTrue: [^direction := #N].
	"! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 20:53:37' prior: 50916760!
rightRotation
	direction := direction rotateRight.
	"
	direction = #N ifTrue: [ ^direction := #E].
	direction = #E ifTrue: [ ^direction := #S].
	direction = #S ifTrue: [ ^direction := #W].
	direction = #W ifTrue: [ ^direction := #N].
	"! !
!East methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:55:06' overrides: 50916953!
rotateLeft
	^North new.! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 20:55:16' prior: 50916985!
leftRotation
	direction := direction rotateLeft.
	"
	direction = #N ifTrue: [^direction := #W].
	direction = #W ifTrue: [^direction := #S].
	direction = #S ifTrue: [^direction := #E].
	direction = #E ifTrue: [^direction := #N].
	"! !
!North methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:55:32' overrides: 50916953!
rotateLeft
	^West new.! !
!West methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:55:44' overrides: 50916953!
rotateLeft
	^South new.! !
!South methodsFor: 'nil' stamp: 'Federico 10/24/2020 20:55:52' overrides: 50916953!
rotateLeft
	^East new.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:56:25' overrides: 50916958!
rotateRight
	^South new.! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:56:42' overrides: 50916958!
rotateRight
	^West new.! !
!West methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:56:53' overrides: 50916958!
rotateRight
	^North new.! !
!North methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:57:01' overrides: 50916958!
rotateRight
	^East new.! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 20:58:40' prior: 50912735!
with: aPoint lookingAt: aMarsRoverDirection

	^self new initializeWith: aPoint lookingAt: aMarsRoverDirection.! !
!MarsRover methodsFor: 'initialize' stamp: 'Federico 10/24/2020 20:58:57' prior: 50916795!
initializeWith: aPoint lookingAt: aMarsRoverDirection
	point := aPoint.
	direction := aMarsRoverDirection.! !
!MarsRoverTest methodsFor: 'setup' stamp: 'Federico 10/24/2020 20:59:24' prior: 50916478 overrides: 16927572!
setUp
	north := North.
	south := South.
	east := East.
	west := West.! !
!MarsRoverTest methodsFor: 'setup' stamp: 'Federico 10/24/2020 21:00:14' prior: 50917064 overrides: 16927572!
setUp
	north := North.
	south := South.
	east := East.
	west := West.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:01:55' prior: 50917033 overrides: 50916958!
rotateRight
	^South.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:01:58' prior: 50917007 overrides: 50916953!
rotateLeft
	^North.! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:02:03' prior: 50917029 overrides: 50916953!
rotateLeft
	^East.! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:02:10' prior: 50917086 overrides: 50916953!
rotateLeft
	^East new.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:02:20' prior: 50917081 overrides: 50916953!
rotateLeft
	^North new.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:02:23' prior: 50917076 overrides: 50916958!
rotateRight
	^South new.! !

!classRemoval: #PointsPortableObject stamp: 'Federico 10/24/2020 21:05:24'!
PortableObject subclass: #PointsPortableObject
	instanceVariableNames: 'points'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #NoPointsPortableObject stamp: 'Federico 10/24/2020 21:05:25'!
PortableObject subclass: #NoPointsPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #PortableObject stamp: 'Federico 10/24/2020 21:05:25'!
StageObject subclass: #PortableObject
	instanceVariableNames: 'name weight'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Door stamp: 'Federico 10/24/2020 21:05:26'!
StageObject subclass: #Door
	instanceVariableNames: 'state key'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #StageObject stamp: 'Federico 10/24/2020 21:05:26'!
Object subclass: #StageObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #PlayableCharacter stamp: 'Federico 10/24/2020 21:05:27'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'name backpack'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #DoorState stamp: 'Federico 10/24/2020 21:05:27'!
Object subclass: #DoorState
	instanceVariableNames: 'door'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Backpack stamp: 'Federico 10/24/2020 21:05:28'!
Object subclass: #Backpack
	instanceVariableNames: 'weightCapacity gamePointsCapacity container'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #DoorTest stamp: 'Federico 10/24/2020 21:05:28'!
TestCase subclass: #DoorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #BackpackTest stamp: 'Federico 10/24/2020 21:05:29'!
TestCase subclass: #BackpackTest
	instanceVariableNames: 'backPack backPackAtAlmostFullCapacity biggerNoPointsPortableObject biggerPointsPortableObject'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

----End fileIn of D:\facultad\Smalltalk\Parcial Terminado\ISW1-2020-2C-Parcial-Enunciado.st----!
!East methodsFor: 'nil' stamp: 'Federico 10/24/2020 21:06:12' prior: 50917096 overrides: 50916953!
rotateLeft
	^North.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:06:25' prior: 50917101 overrides: 50916958!
rotateRight
	^South.! !
!North methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:06:29' prior: 50917045 overrides: 50916958!
rotateRight
	^East.! !
!North methodsFor: 'nil' stamp: 'Federico 10/24/2020 21:06:37' prior: 50917021 overrides: 50916953!
rotateLeft
	^West.! !
!South methodsFor: 'nil' stamp: 'Federico 10/24/2020 21:06:50' prior: 50917091 overrides: 50916953!
rotateLeft
	^East.! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:06:55' prior: 50917037 overrides: 50916958!
rotateRight
	^West.! !
!West methodsFor: 'nil' stamp: 'Federico 10/24/2020 21:07:04' prior: 50917025 overrides: 50916953!
rotateLeft
	^South.! !
!West methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:07:09' prior: 50917041 overrides: 50916958!
rotateRight
	^North.! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 21:07:21'!
ERROR!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 21:07:21'!
ERROR!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 21:07:21'!
ERROR!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 21:07:21'!
ERROR!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 21:07:21'!
ERROR!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 21:07:22'!
ERROR!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 21:07:22'!
ERROR!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 21:07:22'!
ERROR!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 21:07:22'!
ERROR!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 21:07:22'!
ERROR!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 21:07:22'!
ERROR!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 21:07:22'!
ERROR!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 21:07:22'!
ERROR!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 21:07:22'!
ERROR!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 21:07:22'!
ERROR!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 21:07:22'!
ERROR!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 21:07:22'!
ERROR!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 21:07:22'!
ERROR!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 21:07:31'!
ERROR!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 21:07:31'!
ERROR!
!MarsRoverTest methodsFor: 'setup' stamp: 'Federico 10/24/2020 21:09:16' prior: 50917070 overrides: 16927572!
setUp
	north := North new.
	south := South new.
	east := East new.
	west := West new.! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 21:09:18'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 21:09:18'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 21:09:18'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 21:09:18'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 21:09:19'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 21:09:19'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 21:09:19'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 21:09:19'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 21:09:19'!
FAILURE!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 21:09:19'!
FAILURE!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 21:09:19'!
FAILURE!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 21:09:19'!
FAILURE!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 21:09:19'!
FAILURE!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 21:09:19'!
FAILURE!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 21:09:19'!
FAILURE!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 21:09:19'!
FAILURE!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 21:09:19'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 21:09:19'!
PASSED!
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:09:39' prior: 50918349 overrides: 50916953!
rotateLeft
	^North new.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 21:09:43' prior: 50918354 overrides: 50916958!
rotateRight
	^South new.! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 21:09:45'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 21:09:45'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 21:09:45'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 21:09:45'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 21:09:45'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 21:09:45'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 21:09:45'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 21:09:45'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 21:09:45'!
FAILURE!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 21:09:45'!
FAILURE!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 21:09:45'!
FAILURE!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 21:09:45'!
FAILURE!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 21:09:46'!
FAILURE!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 21:09:46'!
FAILURE!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 21:09:46'!
FAILURE!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 21:09:46'!
FAILURE!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 21:09:46'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 21:09:46'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 21:10:59'!
FAILURE!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 21:10:59'!
FAILURE!

aMarsRover whereAreYou!

aMarsRover whereAreYouLookingAt!

aMarsRover whereAreYouLookingAt !

----QUIT----(24 October 2020 21:59:02) CuisUniversity-4365.image priorSource: 18635721!

----STARTUP---- (24 October 2020 22:00:38) as D:\facultad\Smalltalk\windows64\CuisUniversity-4365.image!


!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:01:04'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:01:04'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 22:01:04'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 22:01:04'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 22:01:04'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 22:01:04'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:01:04'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:01:05'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:01:05'!
FAILURE!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 22:01:05'!
FAILURE!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 22:01:05'!
FAILURE!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 22:01:05'!
FAILURE!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 22:01:05'!
FAILURE!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 22:01:05'!
FAILURE!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 22:01:05'!
FAILURE!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 22:01:05'!
FAILURE!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 22:01:05'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 22:01:05'!
PASSED!
!MarsRoverTest methodsFor: 'setup' stamp: 'Federico 10/24/2020 22:01:21' prior: 50918458 overrides: 16927572!
setUp
	north := North.
	south := South.
	east := East.
	west := West.! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:01:24'!
ERROR!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:01:24'!
ERROR!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 22:01:24'!
ERROR!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 22:01:24'!
ERROR!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 22:01:24'!
ERROR!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 22:01:24'!
ERROR!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:01:24'!
ERROR!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:01:24'!
ERROR!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:01:24'!
ERROR!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 22:01:24'!
ERROR!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 22:01:24'!
ERROR!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 22:01:24'!
ERROR!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 22:01:25'!
ERROR!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 22:01:25'!
ERROR!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 22:01:25'!
ERROR!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 22:01:25'!
ERROR!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 22:01:25'!
ERROR!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 22:01:25'!
ERROR!
!MarsRoverTest methodsFor: 'setup' stamp: 'Federico 10/24/2020 22:01:31' prior: 50918689 overrides: 16927572!
setUp
	north := North new.
	south := South new.
	east := East new.
	west := West new.! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:03:43'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:03:44'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 22:03:44'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 22:03:44'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 22:03:44'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 22:03:44'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:03:44'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:03:44'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:03:44'!
FAILURE!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 22:03:44'!
FAILURE!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 22:03:44'!
FAILURE!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 22:03:44'!
FAILURE!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 22:03:44'!
FAILURE!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 22:03:44'!
FAILURE!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 22:03:44'!
FAILURE!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 22:03:44'!
FAILURE!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 22:03:45'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 22:03:45'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:03:57'!
FAILURE!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:03:57'!
FAILURE!

aMarsRover whereAreYouLookingAt !

west!
!North methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:05:04' prior: 50918359 overrides: 50916958!
rotateRight
	^East new.! !
!North methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:05:08' prior: 50918363 overrides: 50916953!
rotateLeft
	^West new.! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:05:35' prior: 50918372 overrides: 50916958!
rotateRight
	^West new.! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:05:39' prior: 50918367 overrides: 50916953!
rotateLeft
	^East new.! !
!West methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:05:44' prior: 50918376 overrides: 50916953!
rotateLeft
	^South new.! !
!West methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:05:47' prior: 50918381 overrides: 50916958!
rotateRight
	^North new.! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:06:01'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:06:01'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 22:06:01'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 22:06:01'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 22:06:01'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 22:06:01'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:06:01'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:06:01'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:06:01'!
FAILURE!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 22:06:01'!
FAILURE!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 22:06:01'!
FAILURE!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 22:06:01'!
FAILURE!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 22:06:01'!
FAILURE!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 22:06:01'!
FAILURE!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 22:06:01'!
FAILURE!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 22:06:01'!
FAILURE!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 22:06:02'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 22:06:02'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:06:08'!
FAILURE!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:06:08'!
FAILURE!

west!

aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 22:07:08' prior: 50916583!
test09LeftRotationLookingAtNorthRotateToWest
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: west equals: aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:07:11'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:07:11'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 22:07:11'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 22:07:11'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 22:07:11'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 22:07:11'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:07:11'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:07:11'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:07:11'!
FAILURE!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 22:07:11'!
FAILURE!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 22:07:11'!
FAILURE!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 22:07:11'!
FAILURE!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 22:07:11'!
FAILURE!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 22:07:11'!
FAILURE!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 22:07:11'!
FAILURE!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 22:07:11'!
FAILURE!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 22:07:11'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 22:07:11'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:07:22'!
FAILURE!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:07:22'!
FAILURE!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 22:21:30' prior: 50916483!
test01ForwardLookingAtNorthAdvanceOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@4 = aMarsRover whereAreYou.! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:21:30'!
FAILURE!
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 22:21:38' prior: 50919031!
test01ForwardLookingAtNorthAdvanceOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 = aMarsRover whereAreYou.! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:25:57' overrides: 16881029!
= aMarsRoverDirection.
	self subclassResponsibility.! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:31:02' prior: 50919058 overrides: 16881029!
= aMarsRoverDirection.
	self class = aMarsRoverDirection class.! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:31:13' prior: 50919064 overrides: 16881029!
= aMarsRoverDirection.
	^self class = aMarsRoverDirection class.! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:31:15'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:31:15'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 22:31:15'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 22:31:16'!
PASSED!
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 22:32:46'!
isValidCommand: aCommand

	^ {$f. $b. $l. $r} includes: aCommand! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 22:32:46' prior: 50916046!
execute: aCommandSequence

	aCommandSequence do: [ :aCommand | 
		(self isValidCommand: aCommand)  ifTrue: [
		aCommand = $f ifTrue: [self forward].
		aCommand = $b ifTrue: [self backward].
		aCommand = $l ifTrue: [self leftRotation].
		aCommand = $r ifTrue: [self rightRotation].
		] ifFalse: [^nil]
		
	].
	
	! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 22:32:57' prior: 50919142!
isValidCommand: aCommand

	^{$f. $b. $l. $r} includes: aCommand! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 22:33:01' prior: 50919160!
isValidCommand: aCommand
	^{$f. $b. $l. $r} includes: aCommand! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 22:33:17' prior: 50919147!
execute: aCommandSequence

	aCommandSequence do: [ :aCommand | 
		(self isValidCommand: aCommand)  ifTrue: [
			aCommand = $f ifTrue: [self forward].
			aCommand = $b ifTrue: [self backward].
			aCommand = $l ifTrue: [self leftRotation].
			aCommand = $r ifTrue: [self rightRotation].
		] ifFalse: [^nil]
		
	].
	
	! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/24/2020 22:36:06' prior: 50919170!
execute: aCommandSequence

	aCommandSequence do: [ :aCommand | 
		(self isValidCommand: aCommand)  ifTrue: [
			aCommand = $f ifTrue: [self forward].
			aCommand = $b ifTrue: [self backward].
			aCommand = $l ifTrue: [self leftRotation].
			aCommand = $r ifTrue: [self rightRotation].
		] ifFalse: [^self]
		
	].
	
	! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:36:10'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:36:10'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 22:36:10'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 22:36:10'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 22:36:10'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 22:36:10'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:36:10'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:36:10'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:36:10'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 22:36:10'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 22:36:11'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 22:36:11'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 22:36:11'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 22:36:11'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 22:36:11'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 22:36:11'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 22:36:11'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 22:36:11'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 22:39:07'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 22:39:08'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 22:39:08'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 22:39:08'!
PASSED!
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:41:10'!
whichWeGoBackwards
	self subclassResponsibility.! !

!methodRemoval: MarsRoverDirection #xxxbackward stamp: 'Federico 10/24/2020 22:41:10'!
xxxbackward
	self subclassResponsibility.!
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 22:41:42' prior: 50916973!
backward
	point := point + direction whichWeGoBackwards.
	"
	direction = #N ifTrue: [point := point + (0@-1)].
	direction = #E ifTrue: [point := point + (-1@0)].
	direction = #W ifTrue: [point := point + (1@0)].
	direction = #S ifTrue: [point := point + (0@1)].
	"
	 ! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:41:46'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:41:46'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 22:41:46'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 22:41:46'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 22:41:46'!
ERROR!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 22:41:46'!
ERROR!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:41:46'!
ERROR!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:41:46'!
ERROR!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:41:46'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 22:41:46'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 22:41:46'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 22:41:46'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 22:41:46'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 22:41:47'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 22:41:47'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 22:41:47'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 22:41:47'!
ERROR!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 22:41:47'!
PASSED!
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:42:09'!
xxxbackward
	self subclassResponsibility.! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 22:42:17' prior: 50919337!
backward
	point := point + direction xxxbackward.
	"
	direction = #N ifTrue: [point := point + (0@-1)].
	direction = #E ifTrue: [point := point + (-1@0)].
	direction = #W ifTrue: [point := point + (1@0)].
	direction = #S ifTrue: [point := point + (0@1)].
	"
	 ! !

!methodRemoval: MarsRoverDirection #whichWeGoBackwards stamp: 'Federico 10/24/2020 22:42:22'!
whichWeGoBackwards
	self subclassResponsibility.!
!West methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:43:00'!
whichWeGoBackwards
	^1@0! !
!North methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:43:01'!
whichWeGoBackwards
	^0@-1! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:43:01'!
whichWeGoBackwards
	self subclassResponsibility.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:43:01' overrides: 50919443!
whichWeGoBackwards
	^-1@0! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:43:01' overrides: 50919443!
whichWeGoBackwards
	^0@1! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:43:01' prior: 50919419!
backward
	point := point + direction whichWeGoBackwards.
	"
	direction = #N ifTrue: [point := point + (0@-1)].
	direction = #E ifTrue: [point := point + (-1@0)].
	direction = #W ifTrue: [point := point + (1@0)].
	direction = #S ifTrue: [point := point + (0@1)].
	"
	 ! !

!methodRemoval: West #xxxbackward stamp: 'Federico 10/24/2020 22:43:01'!
xxxbackward
	^1@0!

!methodRemoval: North #xxxbackward stamp: 'Federico 10/24/2020 22:43:01'!
xxxbackward
	^0@-1!

!methodRemoval: MarsRoverDirection #xxxbackward stamp: 'Federico 10/24/2020 22:43:01'!
xxxbackward
	self subclassResponsibility.!

!methodRemoval: East #xxxbackward stamp: 'Federico 10/24/2020 22:43:01'!
xxxbackward
	^-1@0!

!methodRemoval: South #xxxbackward stamp: 'Federico 10/24/2020 22:43:01'!
xxxbackward
	^0@1!
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:44:10'!
pointingBackwards
	self subclassResponsibility.! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:44:11' overrides: 50919485!
pointingBackwards
	^-1@0! !
!West methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:44:11' overrides: 50919485!
pointingBackwards
	^1@0! !
!North methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:44:11' overrides: 50919485!
pointingBackwards
	^0@-1! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:44:11' overrides: 50919485!
pointingBackwards
	^0@1! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:44:11' prior: 50919457!
backward
	point := point + direction pointingBackwards.
	"
	direction = #N ifTrue: [point := point + (0@-1)].
	direction = #E ifTrue: [point := point + (-1@0)].
	direction = #W ifTrue: [point := point + (1@0)].
	direction = #S ifTrue: [point := point + (0@1)].
	"
	 ! !

!methodRemoval: MarsRoverDirection #whichWeGoBackwards stamp: 'Federico 10/24/2020 22:44:11'!
whichWeGoBackwards
	self subclassResponsibility.!

!methodRemoval: East #whichWeGoBackwards stamp: 'Federico 10/24/2020 22:44:11'!
whichWeGoBackwards
	^-1@0!

!methodRemoval: West #whichWeGoBackwards stamp: 'Federico 10/24/2020 22:44:11'!
whichWeGoBackwards
	^1@0!

!methodRemoval: North #whichWeGoBackwards stamp: 'Federico 10/24/2020 22:44:11'!
whichWeGoBackwards
	^0@-1!

!methodRemoval: South #whichWeGoBackwards stamp: 'Federico 10/24/2020 22:44:11'!
whichWeGoBackwards
	^0@1!
!West methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:44:43'!
pointingForward
	^-1@0! !
!North methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:44:43'!
pointingForward
	^0@1! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:44:43'!
pointingForward
	self subclassResponsibility.! !
!South methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:44:44' overrides: 50919543!
pointingForward
	^0@-1! !
!East methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:44:44' overrides: 50919543!
pointingForward
	^1@0! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Federico 10/24/2020 22:44:44' prior: 50916877!
forward
	point := point + direction pointingForward.
	"
	direction = #N ifTrue: [		point := point + (0@1)].
	direction = #E ifTrue: [		point := point + (1@0)].
	direction = #W ifTrue: [		point := point + (-1@0)].
	direction = #S ifTrue: [		point := point + (0@-1)]
	"! !

!methodRemoval: West #xxxforward stamp: 'Federico 10/24/2020 22:44:44'!
xxxforward
	^-1@0!

!methodRemoval: North #xxxforward stamp: 'Federico 10/24/2020 22:44:44'!
xxxforward
	^0@1!

!methodRemoval: MarsRoverDirection #xxxforward stamp: 'Federico 10/24/2020 22:44:44'!
xxxforward
	self subclassResponsibility.!

!methodRemoval: South #xxxforward stamp: 'Federico 10/24/2020 22:44:44'!
xxxforward
	^0@-1!

!methodRemoval: East #xxxforward stamp: 'Federico 10/24/2020 22:44:44'!
xxxforward
	^1@0!
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 22:45:05' prior: 50919506!
backward
	point := point + direction pointingBackwards.! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 22:45:14' prior: 50919556!
forward
	point := point + direction pointingForward.! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 22:45:17' prior: 50917011!
leftRotation
	direction := direction rotateLeft.! !
!MarsRover methodsFor: 'commands' stamp: 'Federico 10/24/2020 22:45:20' prior: 50916996!
rightRotation
	direction := direction rotateRight.! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/24/2020 22:45:25'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/24/2020 22:45:26'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/24/2020 22:45:26'!
PASSED!
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 22:46:05' prior: 50916729!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'far'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 equals: aMarsRover whereAreYou.
	self assert: north equals: aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 22:46:09' prior: 50916691!
test17TwoForwardAndOneBackwardWorkAsOneForward
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'ffb'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 equals: aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 22:46:33' prior: 50916643!
test13RightRotationLookingAtNorthRotateToEast
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: east equals: aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 22:46:37' prior: 50916655!
test14RightRotationLookingAtEastRotateToSouth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: east.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: south equals: aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 22:46:40' prior: 50916667!
test15RightRotationLookingAtSouthRotateToWest
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: south.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: west equals: aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'right rotation' stamp: 'Federico 10/24/2020 22:46:43' prior: 50916679!
test16RightRotationLookingAtWestRotateToNorth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'r'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: north equals: aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 22:46:49' prior: 50916631!
test12LeftRotationLookingAtEastRotateToNorth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: east.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: north equals: aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 22:46:51' prior: 50916619!
test11LeftRotationLookingAtSouthRotateToEast
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: south.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: east equals: aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'left rotation' stamp: 'Federico 10/24/2020 22:46:54' prior: 50916607!
test10LeftRotationLookingAtWestRotateToSouth
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'l'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: south equals: aMarsRover whereAreYouLookingAt.! !
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 22:47:01' prior: 50916549!
test07BackwardLookingAtWestAdvanceOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 equals: aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 22:47:05' prior: 50916560!
test08BackwardLookingAtSouthAdvanceOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: south.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 equals: aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 22:47:09' prior: 50916538!
test06BackwardLookingAtEastBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: east.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 equals: aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'backward' stamp: 'Federico 10/24/2020 22:47:12' prior: 50916527!
test05BackwardLookingAtNorthBackOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'b'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 equals: aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 22:47:16' prior: 50916516!
test04ForwardLookingAtSouthBackOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: south.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@-1 equals: aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 22:47:19' prior: 50916505!
test03ForwardLookingAtWestBackOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: west.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: -1@0 equals: aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 22:47:22' prior: 50916494!
test02ForwardLookingAtEastAdvanceOnXAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: east.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 1@0 equals: aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'forward' stamp: 'Federico 10/24/2020 22:47:25' prior: 50919046!
test01ForwardLookingAtNorthAdvanceOnYAxis
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'f'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 equals: aMarsRover whereAreYou.! !
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/24/2020 22:48:34' prior: 50919669!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'far'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self assert: 0@1 equals: aMarsRover whereAreYou.
	self assert: north equals: aMarsRover whereAreYouLookingAt.! !

----QUIT----(24 October 2020 22:54:31) CuisUniversity-4365.image priorSource: 18782887!

----STARTUP---- (25 October 2020 21:41:33) as D:\facultad\Smalltalk\windows64\CuisUniversity-4365.image!

!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 21:44:40'!
executeCommand: aCommand

	(self isValidCommand: aCommand) ifFalse: [^self].
	
	aCommand = $f ifTrue: [self forward].
	aCommand = $b ifTrue: [self backward].
	aCommand = $l ifTrue: [self leftRotation].
	aCommand = $r ifTrue: [self rightRotation].

	
	! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'Federico 10/25/2020 21:51:10'!
unknownCommandErrorDescription
	'El comando no es conocido por MarsRover'! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 21:52:15' prior: 50919183!
execute: aCommandSequence

	aCommandSequence do: [ :aCommand | 
		self executeCommand: aCommand.
		].
	
	! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/25/2020 21:52:19'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/25/2020 21:52:19'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/25/2020 21:52:19'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/25/2020 21:52:19'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/25/2020 21:52:19'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/25/2020 21:52:19'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/25/2020 21:52:19'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/25/2020 21:52:19'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/25/2020 21:52:19'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/25/2020 21:52:19'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/25/2020 21:52:19'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/25/2020 21:52:19'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/25/2020 21:52:19'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/25/2020 21:52:20'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/25/2020 21:52:20'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/25/2020 21:52:20'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/25/2020 21:52:20'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 21:52:20'!
FAILURE!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 21:52:20'!
FAILURE!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/25/2020 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/25/2020 21:52:35'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 21:52:35'!
FAILURE!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 21:52:35'!
FAILURE!
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 21:53:24' prior: 50919886!
executeCommand: aCommand

	(self isValidCommand: aCommand) ifFalse: [^nil].
	
	aCommand = $f ifTrue: [self forward].
	aCommand = $b ifTrue: [self backward].
	aCommand = $l ifTrue: [self leftRotation].
	aCommand = $r ifTrue: [self rightRotation].

	
	! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/25/2020 21:53:27'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/25/2020 21:53:28'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 21:53:28'!
FAILURE!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 21:53:28'!
FAILURE!
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 21:54:37' prior: 50920048!
executeCommand: aCommand
	self break.
	(self isValidCommand: aCommand) ifFalse: [^nil].
	
	aCommand = $f ifTrue: [self forward].
	aCommand = $b ifTrue: [self backward].
	aCommand = $l ifTrue: [self leftRotation].
	aCommand = $r ifTrue: [self rightRotation].

	
	! !

aCommand.!
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 21:57:07' prior: 50920128!
executeCommand: aCommand
	self break.
	(self isValidCommand: aCommand) ifFalse: [self error: self unknownCommandErrorDescription.].
	
	aCommand = $f ifTrue: [self forward].
	aCommand = $b ifTrue: [self backward].
	aCommand = $l ifTrue: [self leftRotation].
	aCommand = $r ifTrue: [self rightRotation].

	
	! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'Federico 10/25/2020 21:57:53' prior: 50919897!
unknownCommandErrorDescription
	^'El comando no es conocido por MarsRover'! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 21:58:17' prior: 50920140!
executeCommand: aCommand

	(self isValidCommand: aCommand) ifFalse: [self error: self unknownCommandErrorDescription.].
	
	aCommand = $f ifTrue: [self forward].
	aCommand = $b ifTrue: [self backward].
	aCommand = $l ifTrue: [self leftRotation].
	aCommand = $r ifTrue: [self rightRotation].

	
	! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/25/2020 21:58:20'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 21:58:20'!
ERROR!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 21:58:20'!
ERROR!
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/25/2020 21:59:57' prior: 50919867!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'far'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	

	
	self 
		should: [ aMarsRover execute: aCommandSequence. ]
		raise: Error
		withMessageText: MarsRover unknownCommandErrorDescription.! !
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/25/2020 21:59:59' prior: 50920241!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'far'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self 
		should: [ aMarsRover execute: aCommandSequence. ]
		raise: Error
		withMessageText: MarsRover unknownCommandErrorDescription.! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:00:02'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:00:02'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/25/2020 22:00:02'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/25/2020 22:00:02'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/25/2020 22:00:02'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/25/2020 22:00:02'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:00:02'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:00:02'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/25/2020 22:00:02'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/25/2020 22:00:03'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/25/2020 22:00:03'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/25/2020 22:00:03'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/25/2020 22:00:03'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/25/2020 22:00:03'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/25/2020 22:00:03'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/25/2020 22:00:03'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/25/2020 22:00:03'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 22:00:03'!
ERROR!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 22:00:03'!
ERROR!
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/25/2020 22:00:48' prior: 50920255!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'far'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	aMarsRover execute: aCommandSequence.
	
	self 
		should: [ aMarsRover execute: aCommandSequence. ]
		raise: Error
		withMessageText: MarsRover unknownCommandErrorDescription.
		
	self assert: 0@1 equals: aMarsRover whereAreYou.
	self assert: north equals: aMarsRover whereAreYouLookingAt.! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 22:02:03' prior: 50920159!
executeCommand: aCommand

	(self isValidCommand: aCommand) ifFalse: [self error: self class unknownCommandErrorDescription.].
	
	aCommand = $f ifTrue: [self forward].
	aCommand = $b ifTrue: [self backward].
	aCommand = $l ifTrue: [self leftRotation].
	aCommand = $r ifTrue: [self rightRotation].

	
	! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/25/2020 22:02:08'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/25/2020 22:02:09'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/25/2020 22:02:09'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 22:02:09'!
ERROR!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 22:02:09'!
ERROR!
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/25/2020 22:02:34' prior: 50920338!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'far'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	self 
		should: [ aMarsRover execute: aCommandSequence. ]
		raise: Error
		withMessageText: MarsRover unknownCommandErrorDescription.
		
	self assert: 0@1 equals: aMarsRover whereAreYou.
	self assert: north equals: aMarsRover whereAreYouLookingAt.! !

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 22:02:36'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:02:36'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:02:36'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/25/2020 22:02:36'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/25/2020 22:02:36'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/25/2020 22:02:36'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/25/2020 22:02:36'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:02:36'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:02:36'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/25/2020 22:02:36'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/25/2020 22:02:37'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/25/2020 22:02:37'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/25/2020 22:02:37'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/25/2020 22:02:37'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/25/2020 22:02:37'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/25/2020 22:02:37'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/25/2020 22:02:37'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/25/2020 22:02:37'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 22:02:37'!
PASSED!
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/25/2020 22:04:43'!
test18UnkonwnCommandSendsMessageErrorAndStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'far'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	self 
		should: [ aMarsRover execute: aCommandSequence. ]
		raise: Error
		withMessageText: MarsRover unknownCommandErrorDescription.
		
	self assert: 0@1 equals: aMarsRover whereAreYou.
	self assert: north equals: aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test18UnkonwnCommandStopsExecution stamp: 'Federico 10/25/2020 22:05:03'!
test18UnkonwnCommandStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'far'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	self 
		should: [ aMarsRover execute: aCommandSequence. ]
		raise: Error
		withMessageText: MarsRover unknownCommandErrorDescription.
		
	self assert: 0@1 equals: aMarsRover whereAreYou.
	self assert: north equals: aMarsRover whereAreYouLookingAt.!
!MarsRoverTest methodsFor: 'command sequences' stamp: 'Federico 10/25/2020 22:05:15'!
test19UnkonwnCommandSendsMessageErrorAndStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'far'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	self 
		should: [ aMarsRover execute: aCommandSequence. ]
		raise: Error
		withMessageText: MarsRover unknownCommandErrorDescription.
		
	self assert: 0@1 equals: aMarsRover whereAreYou.
	self assert: north equals: aMarsRover whereAreYouLookingAt.! !

!methodRemoval: MarsRoverTest #test19UnkonwnCommandSendsMessageErrorAndStopsExecution stamp: 'Federico 10/25/2020 22:05:27'!
test19UnkonwnCommandSendsMessageErrorAndStopsExecution
	
	| aMarsRover aCommandSequence |
	
	aCommandSequence := 'far'.
	aMarsRover := MarsRover with: 0@0 lookingAt: north.
	
	self 
		should: [ aMarsRover execute: aCommandSequence. ]
		raise: Error
		withMessageText: MarsRover unknownCommandErrorDescription.
		
	self assert: 0@1 equals: aMarsRover whereAreYou.
	self assert: north equals: aMarsRover whereAreYouLookingAt.!

!testRun: #MarsRoverTest #test18UnkonwnCommandSendsMessageErrorAndStopsExecution stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandSendsMessageErrorAndStopsExecution stamp: 'Federico 10/25/2020 22:05:36'!
PASSED!
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Federico 10/25/2020 22:05:54' prior: 50919071 overrides: 16881029!
= aMarsRoverDirection
	^self class = aMarsRoverDirection class.! !

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:06:02'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/25/2020 22:06:05'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandSendsMessageErrorAndStopsExecution stamp: 'Federico 10/25/2020 22:06:06'!
PASSED!
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 22:13:45'!
isForwardCommand: aCommand

	^ aCommand = $f! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 22:13:45' prior: 50920355!
executeCommand: aCommand

	(self isValidCommand: aCommand) ifFalse: [self error: self class unknownCommandErrorDescription.].
	
	(self isForwardCommand: aCommand) ifTrue: [self forward].
	aCommand = $b ifTrue: [self backward].
	aCommand = $l ifTrue: [self leftRotation].
	aCommand = $r ifTrue: [self rightRotation].

	
	! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 22:14:01'!
isBackwardCommand: aCommand

	^ aCommand = $b! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 22:14:01' prior: 50920739!
executeCommand: aCommand

	(self isValidCommand: aCommand) ifFalse: [self error: self class unknownCommandErrorDescription.].
	
	(self isForwardCommand: aCommand) ifTrue: [self forward].
	(self isBackwardCommand: aCommand) ifTrue: [self backward].
	aCommand = $l ifTrue: [self leftRotation].
	aCommand = $r ifTrue: [self rightRotation].

	
	! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 22:14:14'!
isLeftRotationCommand: aCommand

	^ aCommand = $l! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 22:14:14' prior: 50920757!
executeCommand: aCommand

	(self isValidCommand: aCommand) ifFalse: [self error: self class unknownCommandErrorDescription.].
	
	(self isForwardCommand: aCommand) ifTrue: [self forward].
	(self isBackwardCommand: aCommand) ifTrue: [self backward].
	(self isLeftRotationCommand: aCommand) ifTrue: [self leftRotation].
	aCommand = $r ifTrue: [self rightRotation].

	
	! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 22:14:33'!
isRightRotationCommand: aCommand

	^ aCommand = $r! !
!MarsRover methodsFor: 'executing' stamp: 'Federico 10/25/2020 22:14:34' prior: 50920776!
executeCommand: aCommand

	(self isValidCommand: aCommand) ifFalse: [self error: self class unknownCommandErrorDescription.].
	
	(self isForwardCommand: aCommand) ifTrue: [self forward].
	(self isBackwardCommand: aCommand) ifTrue: [self backward].
	(self isLeftRotationCommand: aCommand) ifTrue: [self leftRotation].
	(self isRightRotationCommand: aCommand) ifTrue: [self rightRotation].

	
	! !
!MarsRover methodsFor: 'command testing' stamp: 'Federico 10/25/2020 22:14:53' prior: 50919165!
isValidCommand: aCommand

	^{$f. $b. $l. $r} includes: aCommand! !

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:21:05'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:21:05'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/25/2020 22:21:05'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/25/2020 22:21:05'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/25/2020 22:21:05'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/25/2020 22:21:05'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:21:05'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:21:05'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/25/2020 22:21:06'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/25/2020 22:21:06'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/25/2020 22:21:06'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/25/2020 22:21:06'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/25/2020 22:21:06'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/25/2020 22:21:06'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/25/2020 22:21:06'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/25/2020 22:21:06'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/25/2020 22:21:06'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandSendsMessageErrorAndStopsExecution stamp: 'Federico 10/25/2020 22:21:06'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardLookingAtNorthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test02ForwardLookingAtEastAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test03ForwardLookingAtWestBackOnXAxis stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test04ForwardLookingAtSouthBackOnYAxis stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test05BackwardLookingAtNorthBackOnYAxis stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test06BackwardLookingAtEastBackOnXAxis stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test07BackwardLookingAtWestAdvanceOnXAxis stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardLookingAtSouthAdvanceOnYAxis stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test09LeftRotationLookingAtNorthRotateToWest stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test10LeftRotationLookingAtWestRotateToSouth stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test11LeftRotationLookingAtSouthRotateToEast stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test12LeftRotationLookingAtEastRotateToNorth stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test13RightRotationLookingAtNorthRotateToEast stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test14RightRotationLookingAtEastRotateToSouth stamp: 'Federico 10/25/2020 22:21:24'!
PASSED!

!testRun: #MarsRoverTest #test15RightRotationLookingAtSouthRotateToWest stamp: 'Federico 10/25/2020 22:21:25'!
PASSED!

!testRun: #MarsRoverTest #test16RightRotationLookingAtWestRotateToNorth stamp: 'Federico 10/25/2020 22:21:25'!
PASSED!

!testRun: #MarsRoverTest #test17TwoForwardAndOneBackwardWorkAsOneForward stamp: 'Federico 10/25/2020 22:21:25'!
PASSED!

!testRun: #MarsRoverTest #test18UnkonwnCommandSendsMessageErrorAndStopsExecution stamp: 'Federico 10/25/2020 22:21:25'!
PASSED!

----QUIT----(25 October 2020 22:21:39) CuisUniversity-4365.image priorSource: 18823317!